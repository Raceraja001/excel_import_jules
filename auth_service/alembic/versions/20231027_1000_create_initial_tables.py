"""Create initial tables: tenants and users

Revision ID: 0001_initial_schema
Revises:
Create Date: 2023-10-27 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# Import UUID type if you're using it directly in migrations for columns
# For some databases, SQLAlchemy's generic UUID type (sa.UUID) is sufficient
# from sqlalchemy.dialects.postgresql import UUID as PG_UUID # Example for PostgreSQL
# For MariaDB, sa.CHAR(36) or sa.BINARY(16) might be used by the dialect for UUIDs,
# or you might rely on the dialect's interpretation of sa.UUID.
# We used sa.dialects.postgresql.UUID in models, which might need adjustment
# if not compatible or if a more generic sa.UUID is preferred for alembic scripts.
# For simplicity, we'll assume sa.UUID works or the dialect handles it.

# revision identifiers, used by Alembic.
revision: str = '0001_initial_schema' # Placeholder revision ID
down_revision: Union[str, None] = None # This is the first migration
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_name'), 'tenants', ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True, server_default=sa.true_()),
    sa.Column('is_superuser', sa.Boolean(), nullable=True, server_default=sa.false_()),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_users_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tenants_name'), table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ###
